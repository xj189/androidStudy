apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

//打包时间
static def releaseTime() {
    return new Date().format("yyyy-MM-dd_HH_mm_ss", TimeZone.getDefault())
}
//获取local.properties的内容
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    namespace "com.style.app.MyApp"
    compileSdkVersion ANDROID_COMPILE_SDK_VERSION
    //buildToolsVersion ANDROID_BUILD_TOOLS_VERSION
    defaultConfig {
        applicationId "com.style.framework"
        minSdkVersion ANDROID_MIN_SDK_VERSION
        targetSdkVersion ANDROID_TARGET_SDK_VERSION
        versionCode 7
        versionName '1.1.7'
        multiDexEnabled true
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        ndk {
            //moduleName "helloNDK"
            abiFilters "armeabi-v7a"//, "armeabi", "arm64-v8a"
        }
    }
    //-frtti支持 RTTI,,-fexceptions启用对 C++ 异常处理的支持
    //菜单build下make app会生成so文件，在app/build/intermediates/cmake目录下
    //原理：通过读取CMakeLists.txt文件编译cpp生成so再加载到apk里面
    externalNativeBuild {
        cmake {
            path 'CMakeLists.txt'
            //cppFlags "-frtti -fexceptions"
        }
    }
    productFlavors {
        /*_sharp_S2 {
            dimension "model"
        }*/
        _sharp_R3 {
            dimension "model"
        }
        _9_0_0_ {
            dimension = "version"
            manifestPlaceholders = [ENVIRONMENT: "豌豆荚"]
        }
        /*_8_1_0_ {
            dimension = "version"
            manifestPlaceholders = [ENVIRONMENT: "360"]
        }*/
    }
    android.applicationVariants.all { variant ->    //批量修改Apk名字
        variant.outputs.all { output ->
            //def fileDir = "${project.rootDir.absolutePath}/publish/${variant.flavorName}/${variant.buildType.name}"
            //variant.getPackageApplication().outputDirectory = new File(fileDir)
            outputFileName = "${variant.flavorName}_v${variant.versionName}_${variant.buildType.name}_${releaseTime()}.apk"
        }
    }
    signingConfigs {
        debug {
            //storeFile file(properties.getProperty("STORE_FILE_DEBUG"))
            /*storePassword properties.getProperty("STORE_PASSWORD")
              keyAlias project.KEY_ALIAS
              keyPassword project.KEY_PASSWORD*/
            //v2SigningEnabled false
        }
        release {
            storeFile file("D:/AndroidStudioProjects/androidStudy/app/signingConfig/release.jks")
            storePassword "dmc19910809"
            keyAlias "keyname"
            keyPassword "dmc19910809"
        }
    }
    buildTypes {
        debug {
            buildConfigField("boolean", "LOG_ENABLE", "true")
            debuggable true
            jniDebuggable true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        /*preview {
            buildConfigField("boolean", "LOG_ENABLE", "true")
            debuggable true
            jniDebuggable true
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        release {
            buildConfigField("boolean", "LOG_ENABLE", "false")
            debuggable false
            jniDebuggable false
            minifyEnabled true
            zipAlignEnabled true
            //慎用，导致很多未知错误
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }*/
    }
    lintOptions {
        //  true--所有正式版构建执行规则生成崩溃的lint检查，如果有崩溃问题将停止构建
        checkReleaseBuilds false
        // true--错误发生后停止gradle构建
        abortOnError false
    }
    buildFeatures {
        buildConfig true
        dataBinding true
        viewBinding true
        flavorDimensions = ["model", "version"]

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = "17"
    }
    ndkVersion '28.0.12674087 rc2'

}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1'
    testImplementation 'junit:junit:4.13.2'
    //androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
      //  exclude group: 'com.android.support', module: 'support-annotations'
    //})
    implementation 'androidx.multidex:multidex-instrumentation:2.0.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-android:2.8.7"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.8.7"
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.palette:palette-ktx:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.google.android.material:material:1.4.0'
    implementation "com.google.code.gson:gson:$gson_version"
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'
    //java注解
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    implementation 'com.github.chrisbanes:PhotoView:2.1.4'
    implementation project(':lib_common')
    implementation project(':lib_custom_view')
    implementation project(':lib_media_picker')
    implementation project(':lib_video_record')
    implementation project(':lib_wheel_picker')
    implementation project(':lib_zxing')
}
